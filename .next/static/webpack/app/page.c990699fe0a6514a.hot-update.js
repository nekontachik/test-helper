"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/lib/apiClient.ts":
/*!******************************!*\
  !*** ./src/lib/apiClient.ts ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth/react */ \"(app-pages-browser)/./node_modules/next-auth/react/index.js\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n// Custom error class for API errors\nclass ApiError extends Error {\n    constructor(message, statusCode){\n        super(message);\n        this.statusCode = statusCode;\n        this.name = \"ApiError\";\n    }\n}\nconst api = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: \"/api\"\n});\napi.interceptors.request.use(async (config)=>{\n    const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_0__.getSession)();\n    if (session === null || session === void 0 ? void 0 : session.user) {\n        config.headers.Authorization = \"Bearer \".concat(session.user.id);\n    }\n    return config;\n});\nconst handleApiError = (error)=>{\n    if (axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isAxiosError(error)) {\n        var _axiosError_response_data, _axiosError_response, _axiosError_response1;\n        const axiosError = error;\n        throw new ApiError(((_axiosError_response = axiosError.response) === null || _axiosError_response === void 0 ? void 0 : (_axiosError_response_data = _axiosError_response.data) === null || _axiosError_response_data === void 0 ? void 0 : _axiosError_response_data.error) || \"An unexpected error occurred\", ((_axiosError_response1 = axiosError.response) === null || _axiosError_response1 === void 0 ? void 0 : _axiosError_response1.status) || 500);\n    }\n    throw new ApiError(\"An unexpected error occurred\", 500);\n};\nconst apiClient = {\n    async get (url, params) {\n        const response = await api.get(url, {\n            params\n        });\n        return response.data;\n    },\n    async post (url, data) {\n        const response = await api.post(url, data);\n        return response.data;\n    },\n    async put (url, data) {\n        const response = await api.put(url, data);\n        return response.data;\n    },\n    async delete (url) {\n        await api.delete(url);\n    },\n    async getProjects () {\n        let page = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1, limit = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 10;\n        const response = await fetch(\"/api/projects?page=\".concat(page, \"&limit=\").concat(limit));\n        if (!response.ok) {\n            throw new Error(\"Failed to fetch projects\");\n        }\n        return response.json();\n    },\n    async createProject (newProject) {\n        const response = await fetch(\"/api/projects\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newProject)\n        });\n        if (!response.ok) {\n            throw new Error(\"Failed to create project\");\n        }\n        return response.json();\n    },\n    async getTestCases (projectId, params) {\n        try {\n            return this.get(\"/projects/\".concat(projectId, \"/test-cases\"), params);\n        } catch (error) {\n            return handleApiError(error);\n        }\n    },\n    async getTestRuns (projectId, params) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-runs\"), params);\n    },\n    async createTestCase (projectId, data) {\n        try {\n            return this.post(\"/projects/\".concat(projectId, \"/test-cases\"), data);\n        } catch (error) {\n            return handleApiError(error);\n        }\n    },\n    async getTestReports (projectId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-reports\"));\n    },\n    async getTestCaseVersions (projectId, testCaseId) {\n        try {\n            const response = await api.get(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId, \"/versions\"));\n            return response.data;\n        } catch (error) {\n            return handleApiError(error);\n        }\n    },\n    async getTestCaseVersion (projectId, testCaseId, version) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId, \"/versions/\").concat(version));\n    },\n    async createTestRun (projectId, data) {\n        return this.post(\"/projects/\".concat(projectId, \"/test-runs\"), data);\n    },\n    async updateTestRun (projectId, testRunId, data) {\n        return this.put(\"/projects/\".concat(projectId, \"/test-runs/\").concat(testRunId), data);\n    },\n    async createTestReport (projectId, data) {\n        return this.post(\"/projects/\".concat(projectId, \"/test-reports\"), data);\n    },\n    async getTestCase (projectId, testCaseId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId));\n    },\n    async updateTestCase (projectId, testCaseId, data) {\n        return this.put(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId), data);\n    },\n    async deleteTestCase (projectId, testCaseId) {\n        return this.delete(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId));\n    },\n    async restoreTestCaseVersion (projectId, testCaseId, versionNumber) {\n        try {\n            return this.post(\"/projects/\".concat(projectId, \"/test-cases/\").concat(testCaseId, \"/restore\"), {\n                versionNumber\n            });\n        } catch (error) {\n            return handleApiError(error);\n        }\n    },\n    async register (data) {\n        const response = await api.post(\"/auth/register\", data);\n        if (!response.data.success) {\n            throw new Error(response.data.error || \"Registration failed\");\n        }\n    },\n    async getProject (projectId) {\n        return this.get(\"/projects/\".concat(projectId));\n    },\n    async getTestRun (projectId, testRunId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-runs/\").concat(testRunId));\n    },\n    async deleteTestRun (projectId, testRunId) {\n        return this.delete(\"/projects/\".concat(projectId, \"/test-runs/\").concat(testRunId));\n    },\n    async getTestSuite (projectId, suiteId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-suites/\").concat(suiteId));\n    },\n    async updateTestSuite (projectId, suiteId, data) {\n        return this.put(\"/projects/\".concat(projectId, \"/test-suites/\").concat(suiteId), data);\n    },\n    async getTestSuites (projectId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-suites\"));\n    },\n    async createTestSuite (projectId, data) {\n        return this.post(\"/projects/\".concat(projectId, \"/test-suites\"), data);\n    },\n    async getTestCaseResults (projectId, testRunId) {\n        return this.get(\"/projects/\".concat(projectId, \"/test-runs/\").concat(testRunId, \"/results\"));\n    }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/apiClient.ts\n"));

/***/ })

});